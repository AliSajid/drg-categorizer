# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
      - alpha
      - beta
env:
  FIREBASE_CLI_EXPERIMENTS: webframeworks
  GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_GITHUB }}
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.comm}}
    outputs:
      outcome: ${{ steps.outcome.outputs.outcome }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm
      - name: Set pnpm as the package manager
        uses: pnpm/action-setup@v2
        with:
          version: 8.4.0
      - name: Install dependencies
        run: pnpm install
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          trust_level: 5
      - name: Semantic Release
        env:
          GIT_AUTHOR_NAME: ASI Github Bot
          GIT_AUTHOR_EMAIL: 395482+AliSajid@users.noreply.github.com
          GIT_COMMITTER_NAME: ASI Github Bot
          GIT_COMMITTER_EMAIL: 395482+AliSajid@users.noreply.github.com
        run: npx semantic-release
      - name: Save Job Outcome
        id: outcome
        if: always()
        run: echo "outcome=${{ job.status }}" >> $GITHUB_OUTPUT
  build_and_deploy:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.outcome == 'success' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup NodeJS 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm
      - name: Set pnpm as the package manager
        uses: pnpm/action-setup@v2
        with:
          version: 8.4.0
      - name: Install dependencies
        run: pnpm install
      - name: Select deployment channel
        id: select_channel
        run: |
          if [ ${{ github.ref_name }} = "main" ]; then
            echo "channel_id=live" >> $GITHUB_ENV
          else
            echo "channel_id=${{github.ref_name}}" >> $GITHUB_ENV
          fi
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_DRG_CATEGORIZER_F1DB1 }}
          channelId: ${{ env.channel_id }}
          projectId: drg-categorizer-f1db1
